version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:7.3-fpm
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      -  /var/www/vendor
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.24
    ports:
      - "6000:3306"
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: todolist
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #phpmyadmin set
  phpmyadmin:
    image: phpmyadmin:5.1
    container_name: phpmyadmin
    ports:
      - "7000:80"
    links:
      - db:db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network


  # ? Bring Up Client UI
  client:
    build:
      context: .
      dockerfile: dockerfiles/client.dockerfile
    container_name: frontend
    volumes:
      - ./client/:/var/www/client
    expose:
      - "8080"
    networks:
      - app-network

  # * Helper Container for Serving the Front-end
  npm:
    image: node:14
    container_name: npm
    volumes:
      - ./client:/var/www/client
    working_dir: /var/www/client
    entrypoint: ["npm"]
    command: bash -c "npm install && npm run dev"
    networks:
      - app-network    

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local